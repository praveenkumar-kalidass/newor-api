name: Build & Deply Dev
on:
  push:
    branches:
      - master
jobs:
  build:
    name: build
    env:
      DEV_EC2_PRIVATE_KEY: ${{ secrets.DEV_EC2_PRIVATE_KEY }}
      DEV_EC2_USERNAME: ${{ secrets.DEV_EC2_USERNAME }}
      DEV_EC2_HOSTNAME: ${{ secrets.DEV_EC2_HOSTNAME }}
      DEV_POSTGRES_USER: ${{ secrets.DEV_POSTGRES_USER }}
      DEV_POSTGRES_PASSWORD: ${{ secrets.DEV_POSTGRES_PASSWORD }}
      DEV_DATABASE_NAME: ${{ secrets.DEV_DATABASE_NAME }}
      DEV_DATABASE_USER: ${{ secrets.DEV_DATABASE_USER }}
      DEV_DATABASE_PASSWORD: ${{ secrets.DEV_DATABASE_PASSWORD }}
    runs-on: macos-latest
    steps:
      - name: git checkout
        uses: actions/checkout@v2
      - name: clean
        run: |
          echo "$DEV_EC2_PRIVATE_KEY" > newor_dev.pem && chmod 400 newor_dev.pem
          ssh -o StrictHostKeyChecking=no -i newor_dev.pem ${DEV_EC2_USERNAME}@${DEV_EC2_HOSTNAME} '
            rm -rf ~/newor && mkdir -p ~/newor/newor-api
            pwd
            ls -a
          '
      - name: environment config
        run: |
          echo "export ENV=dev
          export PORT=3000
          export POSTGRES_USER=$DEV_POSTGRES_USER
          export POSTGRES_PASSWORD=$DEV_POSTGRES_PASSWORD
          export DATABASE_HOST=postgres
          export DATABASE_SUPERUSER=$DEV_POSTGRES_USER
          export DATABASE_SUPERPASSWORD=$DEV_POSTGRES_PASSWORD" > .envrc
      - name: database config
        run: |
          echo "{
            \"dev\":{
              \"username\":\"$DEV_DATABASE_USER\",
              \"password\":\"$DEV_DATABASE_PASSWORD\",
              \"database\":\"$DEV_DATABASE_NAME\",
              \"host\":\"postgres\",
              \"dialect\":\"postgres\",
              \"migrationStorage\":\"sequelize\",
              \"seederStorage\":\"sequelize\"
            }
          }" > config/database.json
      - name: copy files
        run: |
          scp -r -i newor_dev.pem ./* ${DEV_EC2_USERNAME}@${DEV_EC2_HOSTNAME}:~/newor/newor-api
  deploy:
    name: deploy
    needs: build
    runs-on: macos-latest
    steps:
      - name: docker compose
        run: |
          ssh -o StrictHostKeyChecking=no -i newor_dev.pem ${DEV_EC2_USERNAME}@${DEV_EC2_HOSTNAME}
          cd ~/newor/newor-api
          docker-compose up